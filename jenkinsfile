pipeline {
    agent any

    environment {
        REPO = 'MukherjeePushpendu/Devops-Challenge'
        DOCKERHUB_CREDENTIALS = 'dockerhub-credentials'
        SSH_KEY = 'ec2-ssh-key'
        CLOUD_SERVER = 'ubuntu@ec2-13-233-116-108.ap-south-1.compute.amazonaws.com'
        IMAGE_FRONT = 'fusionpactdevopschallenge-frontend'
        IMAGE_BACK = 'fusionpactdevopschallenge-backend'
        TAG = "${BUILD_NUMBER}"   // Unique tag per build
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: "https://github.com/${REPO}.git"
            }
        }

        stage('Build Docker Images') {
            steps {
                sh 'docker compose build'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CREDENTIALS}", usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh """
                        echo "$PASS" | docker login -u "$USER" --password-stdin
                        # Tag images with Docker Hub username and build number
                        docker tag ${IMAGE_FRONT}:latest $USER/${IMAGE_FRONT}:${TAG}
                        docker tag ${IMAGE_BACK}:latest $USER/${IMAGE_BACK}:${TAG}
                        # Push images to Docker Hub
                        docker push $USER/${IMAGE_FRONT}:${TAG}
                        docker push $USER/${IMAGE_BACK}:${TAG}
                    """
                }
            }
        }

        stage('Deploy to EC2') {
    steps {
        sh """
        ssh -i /var/lib/jenkins/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@<EC2_IP> '
            docker pull pushpendumukherjee/fusionpactdevopschallenge-backend:8 &&
            docker pull pushpendumukherjee/fusionpactdevopschallenge-frontend:8 &&
            docker stop backend || true && docker rm backend || true &&
            docker run -d --name backend -p 5000:5000 pushpendumukherjee/fusionpactdevopschallenge-backend:8 &&
            docker stop frontend || true && docker rm frontend || true &&
            docker run -d --name frontend -p 80:80 pushpendumukherjee/fusionpactdevopschallenge-frontend:8
        '
        """
    }
}

    }

    post {
        success {
            echo "✅ Deployment successful! Docker images pushed with tag: ${TAG}"
        }
        failure {
            echo '❌ Build or deployment failed. Check logs.'
        }
    }
}
