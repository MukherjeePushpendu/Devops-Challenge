pipeline {
    agent any

    environment {
        REPO = 'MukherjeePushpendu/Devops-Challenge'
        IMAGE_FRONT = 'fusionpactdevopschallenge-frontend'
        IMAGE_BACK = 'fusionpactdevopschallenge-backend'
        TAG = "${BUILD_NUMBER}"   // Unique tag per build
        EC2_IP = '43.204.144.250'
        PEM_FILE = '/var/lib/jenkins/.ssh/heliii.pem'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: "https://github.com/${REPO}.git"
            }
        }

        stage('Build Docker Images') {
            steps {
                sh 'docker compose build'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh """
                        echo "$PASS" | docker login -u "$USER" --password-stdin
                        docker tag ${IMAGE_FRONT}:latest $USER/${IMAGE_FRONT}:${TAG}
                        docker tag ${IMAGE_BACK}:latest $USER/${IMAGE_BACK}:${TAG}
                        docker push $USER/${IMAGE_FRONT}:${TAG}
                        docker push $USER/${IMAGE_BACK}:${TAG}
                    """
                }
            }
        }

       stage('Deploy to EC2') {
    steps {
        sh """
            ssh -i /var/lib/jenkins/.ssh/heliii.pem -o StrictHostKeyChecking=no ubuntu@${EC2_IP} '
                
                # Pull latest images
                docker pull pushpendumukherjee/${IMAGE_BACK}:${TAG}
                docker pull pushpendumukherjee/${IMAGE_FRONT}:${TAG}

                # Stop & remove old containers if running
                docker stop backend frontend || true
                docker rm backend frontend || true

                # Run backend container
                docker run -d --name backend -p 5000:5000 pushpendumukherjee/${IMAGE_BACK}:${TAG}

                # Run frontend container
                docker run -d --name frontend -p 80:80 pushpendumukherjee/${IMAGE_FRONT}:${TAG}
            '
        """
    }
}

    post {
        success {
            echo "✅ Deployment successful! Docker images pushed with tag: ${TAG}"
        }
        failure {
            echo '❌ Build or deployment failed. Check logs.'
        }
    }
}
